---

- name: log into private Registry
  docker_login:
    registry: "registry.sonata-nfv.eu:5000"
    username: "sonata-nfv"
    password: "s0n@t@"
    reauthorize: yes

# Deploying databases
# deploy postgreSQL database engine
- import_tasks: pgsql.yml
  when: (component == 'database') or 
        (component == 'all')

# deploy MongoDB (NoSQL) database engine
- import_tasks: mongo.yml
  when: (component == 'database') or 
        (component == 'all')

# deploy Redis database engine
- import_tasks: redis.yml
  when: (component == 'database') or 
        (component == 'all')

# deploy postgreSQL database engine for monitoring
- import_tasks: pgsql-monitoring.yml
  when: (component == 'database') or 
        (component == 'all')

# deploy Influxdb
- import_tasks: influxdb.yml
  when: (component == 'database') or 
        (component == 'all')

# deploy RabbitMQ message bus
- import_tasks: rabbitmq.yml
  when: (component == 'broker') or 
        (component == 'all')

# deploy Portal
- import_tasks: portal.yml
  when: (component == 'portal') or
        (component == 'all')

# deploy SDK packager
- import_tasks: tng-sdk-pkg.yml
  when: (component == 'gatekeeper') or
        (component == 'packager') or
        (component == 'all')

# deploy Gatekepper API module
- import_tasks: api-gtw.yml
  when: (component == 'gatekeeper') or
        (component == 'gtk-api-gtw') or
        (component == 'all')

# deploy Gatekepper Common module
- import_tasks: gtk-common.yml
  when: (component == 'gatekeeper') or
        (component == 'gtk-common') or
        (component == 'all')

# deploy Gatekepper SP module
- import_tasks: gtk-sp.yml
  when: (component == 'gatekeeper') or
        (component == 'gtk-sp') or
        (component == 'all')

# deploy Repositories
- import_tasks: rep.yml
  when: (component == 'repositories') or
        (component == 'all')

# deploy Catalogues
- import_tasks: cat.yml
  when: (component == 'catalogues') or
        (component == 'all')

# deploy Catalogues
- import_tasks: slice-mngr.yml
  when: (component == 'slice-manager') or
        (component == 'all')

# deploy Policy Manager
- import_tasks: tng-policy-mngr.yml
  when: (component == 'policy-manager') or
        (component == 'all')

# deploy SLA Management Framework
- import_tasks: sla-mgmt.yml
  when: (component == 'sla-management') or
        (component == 'all')

## Deploying Mano Components
# deploy PluginManager of MANO framework
- import_tasks: pluginmgr.yml
  when: (component == 'mano-framework') or
        (component == 'plugin-manager') or
        (component == 'all')

# deploy Service Lifecycle Manager of MANO framework
- import_tasks: slm.yml
  when: (component == 'mano-framework') or
        (component == 'slm') or
        (component == 'all')

# deploy Function Lifecycle Manager of MANO framework
- import_tasks: flm.yml
  when: (component == 'mano-framework') or
        (component == 'flm') or
        (component == 'all')

# deploy Specific Manager Registry of MANO framework
- import_tasks: smr.yml
  when: (component == 'mano-framework') or
        (component == 'smr') or
        (component == 'all')

# deploy Placement of MANO framework
- import_tasks: placement.yml
  when: (component == 'mano-framework') or
        (component == 'placement') or
        (component == 'all')

# deploy Placement Plugin of MANO framework
- import_tasks: placementplugin.yml
  when: (component == 'mano-framework') or
        (component == 'placement-plugin') or
        (component == 'all')

## Deploy IA
# VIM adaptor
- import_tasks: vim-adaptor.yml
  when: (component == 'infrastructure-abstraction') or
        (component == 'vim-adaptor') or
        (component == 'all')

# WIM adaptor
- import_tasks: wim-adaptor.yml
  when: (component == 'infrastructure-abstraction') or
        (component == 'wim-adaptor') or
        (component == 'all')

## Deploying Monitoring Components
# deploy Monitoring Pushgateway
- import_tasks: pushgw.yml
  when: (component == 'monitoring') or
        (component == 'pushgateway') or
        (component == 'all')

# deploy Monitoring Prometheus
- import_tasks: prometheus.yml
  when: (component == 'monitoring') or
        (component == 'prometheus') or
        (component == 'all')

# deploy Monitoring Manager
- import_tasks: monitmgr.yml
  when: (component == 'monitoring') or
        (component == 'monitoring-manager') or
        (component == 'all')

# deploy Monitoring Manager
- import_tasks: snmpmng.yml
  when: (component == 'monitoring') or
        (component == 'monitoring-snmp') or
        (component == 'all')

# deploy Monitoring Probe
- import_tasks: probe.yml
  when: (component == 'monitoring') or
        (component == 'monitoring-probe') or
        (component == 'all')

# deploy Security Gateway
- import_tasks: sec-gtw.yml
  when: (component == 'gatekeeper') or
        (component == 'security-gateway') or
        (component == 'all')

# deploy mongo-express
- import_tasks: mongo-express.yml
  when: (target == 'pre-int-sp-ath.5gtango.eu') or
        (target == 'int-sp-ath.5gtango.eu')

# Configuring Athens PoP-1
- import_tasks: rabbitmq-enable-plugins.yaml
  when: (target == 'pre-int-sp-ath.5gtango.eu') or
        (target == 'int-sp-ath.5gtango.eu') or
        (target == 'qual-sp-bcn.5gtango.eu') and
        (component == 'all')

# Configuring MOCK PoP
- import_tasks: add-mock-vim-wim.yml
  when: (target == 'pre-int-sp-ath.5gtango.eu') and
        (component == 'all')

# Configuring Athens PoP-1
- import_tasks: add-athens-pop1-vim-wim.yml
  when: (target == 'int-sp-ath.5gtango.eu') or
        (target == 'qual-sp-bcn.5gtango.eu') and
        (component == 'all')

# Configuring Athens PoP-2
#- import_tasks: add-athens-pop2-vim-wim.yml
#  when: target == 'sta-sp-ath.5gtango.eu'

# Configuring Aveiro PoP
#- import_tasks: add-aveiro-pop-vim-wim.yml
#  when: target == 'sta-sp-ave'

- name: log out of private Registry
  docker_login:
    state: absent

